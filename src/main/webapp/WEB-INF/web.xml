<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">


    <display-name>Quiz Game</display-name>



    <!--Defines start page-->
    <welcome-file-list>
        <welcome-file>index.xhtml</welcome-file>
    </welcome-file-list>




    <!--Special components inside the JEE container responsible xmlns:tools="http://schemas.android.com/tools"
    recive and process the HTTP request from the client. Here we are saying
    that we should start the servlet that is responsible to handle JSF.-->
    <servlet>
        <servlet-name>Faces Servlet</servlet-name>
        <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>



    <!--
    Here, we tell which requested URL are going to be handled by the JSF servlet,
    ie all URLs ending with ".faces" and with ".jsf".
    Note: need to have two servlet-mapping, ie it is bit redundant.
    Furthermore, make sure that the servlet-name is the same as the one
    used before in the <servlet> definition
  -->
    <servlet-mapping>
        <servlet-name>Faces Servlet</servlet-name>
        <url-pattern>*.faces</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>Faces Servlet</servlet-name>
        <url-pattern>*.jsf</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>Faces Servlet</servlet-name>
        <url-pattern>*.xhtml</url-pattern>
    </servlet-mapping>


    <!--
    Quite essential parameter: it tells the JSF servlets to skip all
    the HTML/XML comments (like this one) inside the XHTML files
  -->
    <context-param>
        <param-name>javax.faces.FACELETS_SKIP_COMMENTS</param-name>
        <param-value>true</param-value>
    </context-param>


</web-app>
